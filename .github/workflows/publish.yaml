name: Publish for production deployment

on:
  push:
    branches-ignore:
      - main

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    environment: production

    env:
      DB_NAME: farafmb
      DB_USER: farafmb
      DB_PASSWORD: secret

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install -r requirements.txt

      - name: Run tests
        env:
          SECRET_KEY: secret
          DATABASE_URL: postgresql://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@localhost:5432/${{ env.DB_NAME }}
          STORAGE_ENDPOINT_URL: ${{ secrets.STORAGE_ENDPOINT_URL }}
          STORAGE_ACCESS_KEY: ${{ secrets.STORAGE_ACCESS_KEY }}
          STORAGE_SECRET_KEY: ${{ secrets.STORAGE_SECRET_KEY }}
          STORAGE_MEDIA_BUCKET: ${{ secrets.STORAGE_TEST_BUCKET }}
          STORAGE_STATIC_BUCKET: ${{ secrets.STORAGE_TEST_BUCKET }}
        run: |
          python manage.py migrate --no-input
          python manage.py collectstatic --no-input
          python manage.py test --no-input

  merge:
    name: Merging
    needs: test
    if: ${{ success() && github.ref == 'refs/head/dev' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      -  name: Checkout
         uses: actions/checkout@master

      - name: Merge dev -> main
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: main
          github_token: ${{ github.token }}
